// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrderingAPI.Contexts;

#nullable disable

namespace PizzaOrderingAPI.Migrations
{
    [DbContext(typeof(PizzaOrderingContext))]
    [Migration("20240517052845_RoleBasedAdded")]
    partial class RoleBasedAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaOrderingAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaOrderingAPI.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InStock = true,
                            Name = "Margherita",
                            Price = 290.0m
                        },
                        new
                        {
                            Id = 2,
                            InStock = true,
                            Name = "Pepperoni",
                            Price = 400.0m
                        },
                        new
                        {
                            Id = 3,
                            InStock = false,
                            Name = "Pineapple",
                            Price = 620.0m
                        });
                });

            modelBuilder.Entity("PizzaOrderingAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 58, 31, 152, 74, 166, 148, 112, 220, 91, 227, 92, 173, 199, 120, 227, 2, 188, 42, 191, 204, 232, 155, 91, 109, 44, 169, 53, 75, 47, 7, 40, 210, 19, 25, 97, 14, 117, 200, 164, 245, 70, 245, 189, 251, 250, 110, 178, 121, 217, 122, 61, 248, 81, 146, 200, 78, 58, 64, 135, 118, 223, 92, 223, 80 },
                            PasswordSalt = new byte[] { 91, 121, 156, 174, 6, 45, 45, 188, 196, 184, 16, 72, 35, 121, 94, 63, 162, 39, 168, 144, 11, 28, 12, 91, 129, 71, 27, 44, 9, 66, 78, 11, 85, 95, 246, 135, 138, 50, 155, 201, 5, 180, 212, 186, 178, 220, 194, 40, 223, 121, 138, 9, 247, 36, 253, 213, 18, 7, 190, 25, 22, 241, 148, 15, 48, 212, 13, 232, 132, 113, 151, 156, 45, 9, 67, 38, 146, 223, 253, 33, 159, 206, 232, 153, 65, 83, 155, 146, 27, 193, 56, 187, 228, 197, 237, 140, 36, 146, 164, 62, 87, 37, 242, 92, 176, 34, 156, 214, 62, 246, 144, 41, 67, 101, 60, 61, 202, 159, 124, 206, 171, 234, 107, 120, 71, 255, 224, 220 },
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 58, 31, 152, 74, 166, 148, 112, 220, 91, 227, 92, 173, 199, 120, 227, 2, 188, 42, 191, 204, 232, 155, 91, 109, 44, 169, 53, 75, 47, 7, 40, 210, 19, 25, 97, 14, 117, 200, 164, 245, 70, 245, 189, 251, 250, 110, 178, 121, 217, 122, 61, 248, 81, 146, 200, 78, 58, 64, 135, 118, 223, 92, 223, 80 },
                            PasswordSalt = new byte[] { 91, 121, 156, 174, 6, 45, 45, 188, 196, 184, 16, 72, 35, 121, 94, 63, 162, 39, 168, 144, 11, 28, 12, 91, 129, 71, 27, 44, 9, 66, 78, 11, 85, 95, 246, 135, 138, 50, 155, 201, 5, 180, 212, 186, 178, 220, 194, 40, 223, 121, 138, 9, 247, 36, 253, 213, 18, 7, 190, 25, 22, 241, 148, 15, 48, 212, 13, 232, 132, 113, 151, 156, 45, 9, 67, 38, 146, 223, 253, 33, 159, 206, 232, 153, 65, 83, 155, 146, 27, 193, 56, 187, 228, 197, 237, 140, 36, 146, 164, 62, 87, 37, 242, 92, 176, 34, 156, 214, 62, 246, 144, 41, 67, 101, 60, 61, 202, 159, 124, 206, 171, 234, 107, 120, 71, 255, 224, 220 },
                            Role = "Admin",
                            Username = "store1"
                        });
                });

            modelBuilder.Entity("PizzaOrderingAPI.Models.Order", b =>
                {
                    b.HasOne("PizzaOrderingAPI.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderingAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
